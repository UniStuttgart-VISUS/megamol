
trigger:
- master

pr:
- master

variables:
  defaultConfig: >-
    -DMEGAMOL_VCPKG_DOWNLOAD_CACHE=ON
    -DMEGAMOL_WARNING_LEVEL="Off"
    -DMEGAMOL_PLUGIN_MEGAMOL101_GL=ON
    -DMEGAMOL_PLUGIN_IMAGESERIES=ON
    -DMEGAMOL_PLUGIN_IMAGESERIES_GL=ON
    -DMEGAMOL_USE_CGAL=ON
    -DMEGAMOL_USE_PROFILING=ON
    -DMEGAMOL_USE_STACKTRACE=ON
    -DMEGAMOL_USE_TRACY=ON
    -DMEGAMOL_USE_VTKM=ON
  nonGlConfig: >-
    -DMEGAMOL_VCPKG_DOWNLOAD_CACHE=ON
    -DMEGAMOL_WARNING_LEVEL="Off"
    -DMEGAMOL_USE_OPENGL=OFF

jobs:
- job: Windows
  variables:
    VCPKG_DEFAULT_BINARY_CACHE: '$(Agent.BuildDirectory)\vcpkg_cache\archives'
    X_VCPKG_REGISTRIES_CACHE: '$(Agent.BuildDirectory)\vcpkg_cache\registries'

  strategy:
    matrix:
      'VS2019 Release':
        configuration: Release
        cmakeExtraArgs: '$(defaultConfig)'
      'VS2019 Debug':
        configuration: Debug
        cmakeExtraArgs: '$(defaultConfig)'
      'VS2019 Release (nonGL)':
        configuration: Release
        cmakeExtraArgs: '$(nonGlConfig)'

  timeoutInMinutes: 720

  pool:
    name: 'default'
    demands:
    - Agent.OS -equals Windows_NT
    - cmake
    - VisualStudio_16.0

  steps:
  - template: .ci/check-pr-labels-step-pwsh.yml
  - powershell: |
      New-Item -ItemType "directory" -Path "$Env:VCPKG_DEFAULT_BINARY_CACHE" -Force
      New-Item -ItemType "directory" -Path "$Env:X_VCPKG_REGISTRIES_CACHE" -Force
    displayName: 'Setup vcpkg cache directories'
  - task: CMake@1
    displayName: 'CMake Configure'
    inputs:
      cmakeArgs: '.. -G "Visual Studio 16 2019" -A"x64" $(cmakeExtraArgs)'
  - task: CMake@1
    displayName: 'CMake Build'
    inputs:
      cmakeArgs: '--build . --config $(configuration)'

- job: Linux
  variables:
    VCPKG_DEFAULT_BINARY_CACHE: '$(Agent.BuildDirectory)/vcpkg_cache/archives'
    X_VCPKG_REGISTRIES_CACHE: '$(Agent.BuildDirectory)/vcpkg_cache/registries'

  strategy:
    matrix:
      'GCC11 / Debug':
        dockerImage: megamol_ci_ubuntu
        cCompiler: gcc-11
        cxxCompiler: g++-11
        configuration: Debug
        cmakeExtraArgs: '$(defaultConfig)'
      'Clang14 / Release':
        dockerImage: megamol_ci_ubuntu
        cCompiler: clang-14
        cxxCompiler: clang++-14
        configuration: Release
        cmakeExtraArgs: '$(defaultConfig)'
      'GCC11 / Release (nonGL)':
        dockerImage: megamol_ci_ubuntu
        cCompiler: gcc-11
        cxxCompiler: g++-11
        configuration: Release
        cmakeExtraArgs: '$(nonGlConfig)'

  timeoutInMinutes: 720

  pool:
    name: 'default'
    demands:
    - Agent.OS -equals Linux
    - docker

  container: ghcr.io/unistuttgart-visus/$(dockerImage):master

  steps:
  - template: .ci/check-pr-labels-step-bash.yml
  - bash: |
      mkdir -p $VCPKG_DEFAULT_BINARY_CACHE
      mkdir -p $X_VCPKG_REGISTRIES_CACHE
    displayName: 'Setup vcpkg cache directories'
  - bash: echo "##vso[task.setvariable variable=numberOfCpuCores]$(nproc)"
    displayName: 'Bash get number of CPU cores'
  - task: CMake@1
    displayName: 'CMake Configure'
    inputs:
      cmakeArgs: '.. -G Ninja -DCMAKE_C_COMPILER=$(cCompiler) -DCMAKE_CXX_COMPILER=$(cxxCompiler) -DCMAKE_BUILD_TYPE=$(configuration) $(cmakeExtraArgs)'
  - task: CMake@1
    displayName: 'CMake Build'
    inputs:
      cmakeArgs: '--build . --parallel $(numberOfCpuCores)'
