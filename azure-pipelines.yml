
trigger:
- master

pr:
- master

jobs:
- job: Windows
  strategy:
    matrix:
      'VS2019 Release':
        configuration: Release
        generator: 'Visual Studio 16 2019'
      'VS2019 Debug':
        configuration: Debug
        generator: 'Visual Studio 16 2019'

  pool:
    name: 'default'
    demands:
    - Agent.OS -equals Windows_NT
    - cmake
    - VisualStudio_16.0
    - megamol_build_enabled

  steps:
  - task: PowerShell@2
    displayName: 'Install Python'
    inputs:
      targetType: 'inline'
      script: |
        $pythonUrl = "https://www.python.org/ftp/python/3.9.4/python-3.9.4-embed-amd64.zip"
        $python_path = Join-Path (Get-Item .).FullName "python_tmp"
        $tmp = New-TemporaryFile
        $tmp = Rename-Item -Path $tmp -NewName "$tmp.zip" -PassThru
        Invoke-WebRequest -OutFile $tmp $pythonUrl
        Expand-Archive -Path $tmp -DestinationPath python_tmp -Force
        $tmp | Remove-Item
        echo "##vso[task.prependpath]$python_path"
  - task: CMake@1
    displayName: 'CMake Configure'
    inputs:
      cmakeArgs: '.. -G"$(generator)" -A"x64"'
  - task: CMake@1
    displayName: 'CMake Build'
    inputs:
      cmakeArgs: '--build . --config $(configuration)'

- job: Linux
  strategy:
    matrix:
      'GCC9 / Make / Release':
        cCompiler: gcc-9
        cxxCompiler: g++-9
        configuration: Release
        generator: 'Unix Makefiles'
      'GCC9 / Make / Debug':
        cCompiler: gcc-9
        cxxCompiler: g++-9
        configuration: Debug
        generator: 'Unix Makefiles'
      'GCC9 / Ninja / Release':
        cCompiler: gcc-9
        cxxCompiler: g++-9
        configuration: Release
        generator: 'Ninja'
      'Clang10 / Make / Release':
        cCompiler: clang-10
        cxxCompiler: clang++-10
        configuration: Release
        generator: 'Unix Makefiles'

  pool:
    name: 'default'
    demands:
    - Agent.OS -equals Linux
    - cmake
    - megamol_build_enabled

  steps:
  - bash: echo "##vso[task.setvariable variable=numberOfCpuCores]$(nproc)"
    displayName: 'Bash get number of CPU cores'
  - task: CMake@1
    displayName: 'CMake Configure'
    inputs:
      cmakeArgs: '.. -G"$(generator)" -DCMAKE_C_COMPILER=$(cCompiler) -DCMAKE_CXX_COMPILER=$(cxxCompiler) -DCMAKE_BUILD_TYPE=$(configuration)'
  - task: CMake@1
    displayName: 'CMake Build'
    inputs:
      cmakeArgs: '--build . --parallel $(numberOfCpuCores)'
