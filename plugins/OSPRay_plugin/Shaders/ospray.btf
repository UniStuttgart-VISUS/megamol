<?xml version="1.0" encoding="utf-8"?>
<btf type="MegaMolGLSLShader" version="1.0" namespace="ospray">
    <include file="common"/>

    <shader name="vertex">
        <snippet type="version">130</snippet>
        <snippet name="common::defines"/>
        <snippet name="main" type="string">
            <![CDATA[

out vec3 ws_pos;

void main(void) {
    const vec4 vertices[4] = vec4[4]( vec4(-1.0, -1.0, 0.0, 1.0),
                                      vec4(1.0, -1.0, 0.0, 1.0),
                                      vec4(-1.0, 1.0, 0.0, 1.0),
                                      vec4(1.0, 1.0, 0.0, 1.0) );
    //gl_Position = vec4(vertices[gl_VertexID].xy, 0.99, 1);
    ws_pos = vec3(vertices[gl_VertexID].xy, 0.99);
    gl_Position = vec4(ws_pos, 1);
}
]]>
        </snippet>
    </shader>

  <shader name="fragment">
    <snippet type="version">130</snippet>
    <snippet name="common::defines"/>
    <snippet name="body1" type="string">
            <![CDATA[
            

//uniform sampler2D tex;
//in vec2 texCoords;
//out vec4 fragColor;
//
//void main() {
//    vec4 color = texture(tex, texCoords);
//    fragColor = color;
//}

//layout( location = 0 ) out vec4 FragColor;
 
uniform sampler2D tex;
uniform sampler2D depth;

in vec3 ws_pos;

void main()
{
    vec2  coord  = vec2((ws_pos.x+1)/2, (ws_pos.y+1)/2);
    gl_FragDepth = texture(depth, coord).r;
    //gl_FragDepth = 0.5;
    //gl_FragColor = texture(depth, coord);
    //FragColor = vec4(FragColor.xyz, 1);
    gl_FragColor    = texture(tex, coord);
}


     ]]>
    </snippet>
  </shader>
</btf>
