  faceNormal = vec3(0.0, 1.0, 0.0);
  faceNormal = ((2.0 * ((dot(quat[0].xyz, faceNormal) * quat[0].xyz) + (quat[0].w * cross(quat[0].xyz, faceNormal)))) + (((quat[0].w * quat[0].w) - dot(quat[0].xyz, quat[0].xyz)) * faceNormal));
  faceColor = DirectLight(faceNormal, vec4(1.0, 0.0, 0.0, 1.0));
  p = o + x[0] * -1.0 + y[0] * 0.0 + z[0] * 1.0;
  gl_Position = p / p.w;
  gl_FrontColor = faceColor;
  EmitVertex();
  p = o + x[0] * 1.0 + y[0] * 0.0 + z[0] * 1.0;
  gl_Position = p / p.w;
  gl_FrontColor = faceColor;
  EmitVertex();
  p = o + x[0] * 0.0 + y[0] * 1.0 + z[0] * -1.0;
  gl_Position = p / p.w;
  gl_FrontColor = faceColor;
  EmitVertex();
  EndPrimitive();

  faceNormal = vec3(0.0, -1.0, 0.0);
  faceNormal = ((2.0 * ((dot(quat[0].xyz, faceNormal) * quat[0].xyz) + (quat[0].w * cross(quat[0].xyz, faceNormal)))) + (((quat[0].w * quat[0].w) - dot(quat[0].xyz, quat[0].xyz)) * faceNormal));
  faceColor = DirectLight(faceNormal, vec4(1.0, 1.0, 0.0, 1.0));
  p = o + x[0] * 1.0 + y[0] * 0.0 + z[0] * 1.0;
  gl_Position = p / p.w;
  gl_FrontColor = faceColor;
  EmitVertex();
  p = o + x[0] * -1.0 + y[0] * 0.0 + z[0] * 1.0;
  gl_Position = p / p.w;
  gl_FrontColor = faceColor;
  EmitVertex();
  p = o + x[0] * 0.0 + y[0] * -1.0 + z[0] * -1.0;
  gl_Position = p / p.w;
  gl_FrontColor = faceColor;
  EmitVertex();
  EndPrimitive();

  faceNormal = vec3(-1.0, 0.0, 0.0);
  faceNormal = ((2.0 * ((dot(quat[0].xyz, faceNormal) * quat[0].xyz) + (quat[0].w * cross(quat[0].xyz, faceNormal)))) + (((quat[0].w * quat[0].w) - dot(quat[0].xyz, quat[0].xyz)) * faceNormal));
  faceColor = DirectLight(faceNormal, vec4(0.0, 1.0, 0.0, 1.0));
  p = o + x[0] * -1.0 + y[0] * 0.0 + z[0] * 1.0;
  gl_Position = p / p.w;
  gl_FrontColor = faceColor;
  EmitVertex();
  p = o + x[0] * 0.0 + y[0] * 1.0 + z[0] * -1.0;
  gl_Position = p / p.w;
  gl_FrontColor = faceColor;
  EmitVertex();
  p = o + x[0] * 0.0 + y[0] * -1.0 + z[0] * -1.0;
  gl_Position = p / p.w;
  gl_FrontColor = faceColor;
  EmitVertex();
  EndPrimitive();

  faceNormal = vec3(1.0, 0.0, 0.0);
  faceNormal = ((2.0 * ((dot(quat[0].xyz, faceNormal) * quat[0].xyz) + (quat[0].w * cross(quat[0].xyz, faceNormal)))) + (((quat[0].w * quat[0].w) - dot(quat[0].xyz, quat[0].xyz)) * faceNormal));
  faceColor = DirectLight(faceNormal, vec4(0.0, 0.0, 1.0, 1.0));
  p = o + x[0] * 0.0 + y[0] * 1.0 + z[0] * -1.0;
  gl_Position = p / p.w;
  gl_FrontColor = faceColor;
  EmitVertex();
  p = o + x[0] * 1.0 + y[0] * 0.0 + z[0] * 1.0;
  gl_Position = p / p.w;
  gl_FrontColor = faceColor;
  EmitVertex();
  p = o + x[0] * 0.0 + y[0] * -1.0 + z[0] * -1.0;
  gl_Position = p / p.w;
  gl_FrontColor = faceColor;
  EmitVertex();
  EndPrimitive();
