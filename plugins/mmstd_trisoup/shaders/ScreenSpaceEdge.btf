<?xml version="1.0" encoding="utf-8"?>
<btf type="MegaMolGLSLShader" version="1.0" namespace="ScreenSpaceEdge">
	<shader name="vertex">
    <snippet type="version">410</snippet>
    <snippet type="string">
		<![CDATA[
//#version 110
in vec4 in_vertex;

void main() {
  gl_Position = in_vertex;
}

]]>
		</snippet>
	</shader>
	
	<shader name="fragment">
    <snippet type="version">410</snippet>
		<snippet type="string">
		<![CDATA[
//uniform float inWidth;
//uniform float inHeight;

uniform sampler2D inColorTex;
uniform sampler2D inDepthTex;

uniform ivec2 viewportMax;
uniform vec3 color;

out vec4 fragColor;

void main() {
  ivec3 step = ivec3(-1, 0, 1);
  ivec2 pos = ivec2(gl_FragCoord.xy);

  vec3 col00 = texelFetch(inColorTex, pos + step.xx, 0).rgb;
  vec3 col10 = texelFetch(inColorTex, pos + step.yx, 0).rgb;
  vec3 col20 = texelFetch(inColorTex, pos + step.zx, 0).rgb;
  vec3 col01 = texelFetch(inColorTex, pos + step.xy, 0).rgb;
  // vec3 col11 = texelFetch(inColorTex, pos + step.yy, 0).rgb;
  vec3 col21 = texelFetch(inColorTex, pos + step.zy, 0).rgb;
  vec3 col02 = texelFetch(inColorTex, pos + step.xz, 0).rgb;
  vec3 col12 = texelFetch(inColorTex, pos + step.yz, 0).rgb;
  vec3 col22 = texelFetch(inColorTex, pos + step.zz, 0).rgb;

  float depth = texelFetch(inDepthTex, pos, 0).r;

  vec3 g_x = col00 * 3.0 + col10 * 10.0 + col20 * 3.0
    + col02 * -3.0 + col12 * -10.0 + col22 * -3.0;
  vec3 g_y = col00 * 3.0 + col01 * 10.0 + col02 * 3.0
    + col20 * -3.0 + col21 * -10.0 + col22 * -3.0;

  vec3 g = max(abs(g_x), abs(g_y));
  float f = max(g.x, max(g.y, g.z));
  if ((pos.x == 0) || (pos.y == 0) || (pos.x == viewportMax.x) || (pos.y == viewportMax.y)) f = 0.0;

  if (f < 0.5) discard;

  depth = min(depth, 0.999);

  fragColor = vec4(color, 1.0);
  gl_FragDepth = depth;
}

]]>
		</snippet>
	</shader>
</btf>