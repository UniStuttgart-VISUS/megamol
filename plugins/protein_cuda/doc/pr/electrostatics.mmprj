<?xml version="1.0" encoding="utf-8"?>
<MegaMol type="project" version="1.0">
    
    <!-- SURFACE RENDERING -->
    
    <!-- potraycastview -->
    <view name="potraycastview" viewmod="view3d">
        <module class="View3d" name="view3d" />
        <module class="PotentialVolumeRaycaster" name="potren" />
        <module class="SimpleMoleculeRenderer" name="cartren" />
        <!--<module class="VTILoader" name="vtidata" />-->
        <module class="VMDDXLoader" name="vtidata" >
            <param name="filename" value="S:\SFB716_2\D4\Datensaetze\scharnkn\TIM\20130411_2YPI\noavg_ewald025\TIM_2YPI.0000.dx" />
        </module>
        <module class="PDBLoader" name="pdbdata" />
        <call class="CallRender3D" from="view3d::rendering" to="potren::rendering" />
        <call class="CallRender3D" from="potren::protren" to="cartren::rendering" />        
        <call class="MolecularDataCall" from="cartren::getdata" to="pdbdata::dataout" />
        <!--<call class="VTIDataCall" from="potren::getVolData" to="vtidata::dataOut" />-->
        <call class="VTIDataCall" from="potren::getVolData" to="vtidata::dataout" />
        <call class="MolecularDataCall" from="potren::getParticleData" to="pdbdata::dataOut" />
    </view>
    
    <!-- COMPARATIVE SURFACE RENDERING -->
    
    <!-- potview -->
    <view name="potview" viewmod="view3d">
        
        <module class="View3d" name="view3d" />
        <module class="ComparativeSurfacePotentialRenderer" name="potren" />
        <module class="VTILoader" name="vtidata0" />
        <module class="VTILoader" name="vtidata1" />
        <module class="PDBLoader" name="pdbdata0" />
        <module class="PDBLoader" name="pdbdata1" />
        
        <call class="CallRender3D" from="view3d::rendering" to="potren::rendering" />     
        <call class="VTIDataCall" from="potren::getVolData0" to="vtidata0::dataOut" />
        <call class="VTIDataCall" from="potren::getVolData1" to="vtidata1::dataOut" />
        <call class="MolecularDataCall" from="potren::getParticleData0" to="pdbdata0::dataOut" />
        <call class="MolecularDataCall" from="potren::getParticleData1" to="pdbdata1::dataOut" />
        
        <!-- This is optional -->
        <module class="MoleculeCartoonRenderer" name="molren" />
        <module class="PDBLoader" name="pdbdata3" />
        <call class="CallRender3D" from="potren::protren" to="molren::rendering" />     
        <call class="MolecularDataCall" from="molren::getData" to="pdbdata3::dataOut" />
        <!-- This is optional -->
        
        <!-- This is optional -->
        <!--<module class="SimpleMoleculeRenderer" name="molren" />
        <module class="PDBLoader" name="pdbdata3" />
        <call class="CallRender3D" from="potren::protren" to="molren::rendering" />     
        <call class="MolecularDataCall" from="molren::getData" to="pdbdata3::dataOut" />-->
        <!-- This is optional -->
        
    </view>
    
    <!-- linkedpotview -->
    <view name="linkedpotview0" viewmod="view0">
        <module class="SharedCameraParameters" name="::sharedCamParams" />
        <module class="LinkedView3d" name="view0" />
        <module class="ComparativeSurfacePotentialRenderer" name="::potrenMaster" />        
        <module class="VTILoader" name="vtidata0" />
        <module class="VTILoader" name="vtidata1" />
        <module class="PDBLoader" name="pdbdata0" />
        <module class="PDBLoader" name="pdbdata1" />
        <call class="CallRender3D" from="view0::rendering" to="::potrenMaster::rendering" />        
        <call class="VTIDataCall" from="::potrenMaster::getVolData0" to="vtidata0::dataOut" />
        <call class="VTIDataCall" from="::potrenMaster::getVolData1" to="vtidata1::dataOut" />
        <call class="MolecularDataCall" from="::potrenMaster::getParticleData0" to="pdbdata0::dataOut" />
        <call class="MolecularDataCall" from="::potrenMaster::getParticleData1" to="pdbdata1::dataOut" />
        <call class="CallCamParams" from="view0::shareCamParams" to="::sharedCamParams::camParams" />
        
        <!-- This is optional -->
        <module class="MoleculeCartoonRenderer" name="molren" />
        <module class="PDBLoader" name="pdbdata3" />
        <call class="CallRender3D" from="::potrenMaster::protren" to="molren::rendering" />     
        <call class="MolecularDataCall" from="molren::getData" to="pdbdata3::dataOut" />
        <!-- This is optional-->
        
    </view>
    <view name="linkedpotview1" viewmod="view1">
        <module class="LinkedView3d" name="view1" />
        <module class="SurfacePotentialRendererSlave" name="potrenSlave0" />
        <call class="CallRender3D" from="view1::rendering" to="potrenSlave0::rendering" />
        <call class="CallCamParams" from="view1::shareCamParams" to="::sharedCamParams::camParams" />
        <call class="VBODataCall" from="potrenSlave0::vboIn" to="::potrenMaster::vboOut0" />
    </view>
    <view name="linkedpotview2" viewmod="view2">
        <module class="LinkedView3d" name="view2" />
        <module class="SurfacePotentialRendererSlave" name="potrenSlave1" />
        <call class="CallRender3D" from="view2::rendering" to="potrenSlave1::rendering" />
        <call class="CallCamParams" from="view2::shareCamParams" to="::sharedCamParams::camParams" />
        <call class="VBODataCall" from="potrenSlave1::vboIn" to="::potrenMaster::vboOut1" />
    </view>
    
    
    <!-- tiledpotview -->
    <view name="tiledpotview" viewmod="SplitView1">
        <module class="SplitView" name="SplitView1" />
        <module class="LinkedView3d" name="view1" />
        <module class="SplitView" name="SplitView2" />
        <module class="LinkedView3d" name="view2" />
        <module class="LinkedView3d" name="view3" />
        
        <module class="SharedCameraParameters" name="sharedCamParams" />

        <module class="ComparativeSurfacePotentialRenderer" name="potrenMaster" />  
        <module class="SurfacePotentialRendererSlave" name="potrenSlave0" />                                
        <module class="SurfacePotentialRendererSlave" name="potrenSlave1" />    
        
        <module class="VTILoader" name="vtidata0" />
        <module class="VTILoader" name="vtidata1" />
        <module class="PDBLoader" name="pdbdata0" />
        <module class="PDBLoader" name="pdbdata1" />

        <call class="CallRenderView" from="SplitView1::render2" to="view1::render" />
        <call class="CallRenderView" from="SplitView1::render1" to="SplitView2::render" />
        <call class="CallRenderView" from="SplitView2::render1" to="view2::render" />
        <call class="CallRenderView" from="SplitView2::render2" to="view3::render" />
        <call class="CallRender3D" from="view1::rendering" to="potrenMaster::rendering" />  
        <call class="CallRender3D" from="view2::rendering" to="potrenSlave0::rendering" />
        <call class="CallRender3D" from="view3::rendering" to="potrenSlave1::rendering" />  
        
        <call class="VTIDataCall" from="potrenMaster::getVolData0" to="vtidata0::dataOut" />
        <call class="VTIDataCall" from="potrenMaster::getVolData1" to="vtidata1::dataOut" />
        <call class="MolecularDataCall" from="potrenMaster::getParticleData0" to="pdbdata0::dataOut" />
        <call class="MolecularDataCall" from="potrenMaster::getParticleData1" to="pdbdata1::dataOut" />
        <call class="CallCamParams" from="view1::shareCamParams" to="sharedCamParams::camParams" />
        
        <call class="CallCamParams" from="view2::shareCamParams" to="sharedCamParams::camParams" />
        <call class="VBODataCall" from="potrenSlave0::vboIn" to="potrenMaster::vboOut0" />
        
        <call class="CallCamParams" from="view3::shareCamParams" to="sharedCamParams::camParams" />
        <call class="VBODataCall" from="potrenSlave1::vboIn" to="potrenMaster::vboOut1" />

        <!-- This is optional -->
        <module class="MoleculeCartoonRenderer" name="molren" />
        <module class="PDBLoader" name="pdbdata3" />
        <call class="CallRender3D" from="potrenMaster::protren" to="molren::rendering" />     
        <call class="MolecularDataCall" from="molren::getData" to="pdbdata3::dataOut" />
        <!-- This is optional -->               
        
    </view>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    <!-- esview -->
    <view name="esview" viewmod="view3d">
        <module class="View3d" name="view3d" />
        <module class="ComparativeFieldTopologyRenderer" name="ren" />
        <module class="VTILoader" name="vtidata0" />
        <module class="VTILoader" name="vtidata1" />
        <call class="CallRender3D" from="view3d::rendering" to="ren::rendering" />
        <call class="VTIDataCall" from="ren::getData0" to="vtidata0::dataout" />
        <call class="VTIDataCall" from="ren::getData1" to="vtidata1::dataout" />
    </view>
    
    <!-- esdualview -->
    <view name="esdualview" viewmod="view3d">
        <module class="View3d" name="view3d" />
        <module class="Mux2Renderer3D" name="switch" />
        <!--<module class="SimpleMoleculeRenderer" name="molren" />-->
        
        <module class="ComparativeSurfacePotentialRenderer" name="potren" />
        <module class="VTILoader" name="vtidata0" />
        <module class="VTILoader" name="vtidata1" />
        <module class="PDBLoader" name="pdbdata0" />
        <module class="PDBLoader" name="pdbdata1" />
        
        <call class="VTIDataCall" from="potren::getVolData0" to="vtidata0::dataOut" />
        <call class="VTIDataCall" from="potren::getVolData1" to="vtidata1::dataOut" />
        <call class="MolecularDataCall" from="potren::getParticleData0" to="pdbdata0::dataOut" />
        <call class="MolecularDataCall" from="potren::getParticleData1" to="pdbdata1::dataOut" />

        
        <module class="ComparativeFieldTopologyRenderer" name="esren" />
        <call class="VTIDataCall" from="esren::getData0" to="vtidata0::dataout" />
        <call class="VTIDataCall" from="esren::getData1" to="vtidata1::dataout" />
        
        <call class="CallRender3D" from="view3d::rendering" to="switch::rendering" />
        <call class="CallRender3D" from="switch::renderer1" to="potren::rendering" />
        <call class="CallRender3D" from="switch::renderer2" to="esren::rendering" />

    </view>
    
    <!-- potmatch -->
    <view name="potmatch" viewmod="view2d">
        <module class="View2d" name="view2d" />
        
        <!--<module class="DiagramRenderer" name="ren" />-->
        <module class="VariantMatchRenderer" name="ren" />
        
        <module class="ProteinVariantMatch" name="match" >
            <param name="heuristic" value="RMS" />
            <param name="rmsMode" value="All" />
        </module>

        <module class="VTILoader" name="vtidata" />
        <module class="PDBLoader" name="pdbdata" />

        <call class="CallRender2D" from="view2d::rendering" to="ren::rendering" />
        
        
        <!--<call class="DiagramCall" from="ren::getData" to="match::dataOut" /> -->
        <call class="VariantMatchDataCall" from="ren::getData" to="match::matrixDataout" /> 

        <call class="MolecularDataCall" from="match::getParticledata" to="pdbdata::dataout" />
        <call class="VTIDataCall" from="match::getVolumeData" to="vtidata::dataOut" />

    </view>
    
    <!-- potmatchdiag -->
    <view name="potmatchdiag" viewmod="view2d">
        <module class="View2d" name="view2d" />
        
        <module class="DiagramRenderer" name="ren" />
        <module class="ProteinVariantMatch" name="match" >
            <param name="heuristic" value="RMS" />
            <param name="rmsMode" value="All" />
        </module>

        <module class="VTILoader" name="vtidata" />
        <module class="PDBLoader" name="pdbdata" />

        <call class="CallRender2D" from="view2d::rendering" to="ren::rendering" />
        
        
        <call class="DiagramCall" from="ren::getData" to="match::diagDataout" />

        <call class="MolecularDataCall" from="match::getParticledata" to="pdbdata::dataout" />
        <call class="VTIDataCall" from="match::getVolumeData" to="vtidata::dataOut" />

    </view>
    
    <!-- potfieldview -->
    <view name="potfieldview" viewmod="view3d">
        <module class="View3d" name="view3d" />
        <module class="ComparativeSurfacePotentialRenderer" name="potren" />
        <module class="StreamlineRenderer" name="fieldren" />
        <module class="VTILoader" name="vtidata0" />
        <module class="VTILoader" name="vtidata1" />
        <module class="PDBLoader" name="pdbdata0" />
        <module class="PDBLoader" name="pdbdata1" />
        <call class="CallRender3D" from="view3d::rendering" to="potren::rendering" />     
        <call class="CallRender3D" from="potren::protren" to="fieldren::rendering" /> 
        <call class="VTIDataCall" from="fieldren::getVolumeData" to="vtidata0::dataOut" />
        <call class="VBODataCall" from="fieldren::getVertexData" to="potren::vboOut0" />
        <call class="VTIDataCall" from="potren::getVolData0" to="vtidata0::dataOut" />
        <call class="VTIDataCall" from="potren::getVolData1" to="vtidata1::dataOut" />
        <call class="MolecularDataCall" from="potren::getParticleData0" to="pdbdata0::dataOut" />
        <call class="MolecularDataCall" from="potren::getParticleData1" to="pdbdata1::dataOut" />
    </view>
    
    
    <!-- tiledpotviewall -->
    <view name="tiledpotviewall" viewmod="SplitView1">
        <module class="SplitView" name="SplitView1" />
        <module class="SplitView" name="SplitView2" />
        <module class="SplitView" name="SplitView3" />
        <module class="SplitView" name="SplitView4" />
        
        <module class="LinkedView3d" name="view1" />
        <module class="LinkedView3d" name="view2" />
        <module class="LinkedView3d" name="view3" />
        
        <module class="SharedCameraParameters" name="sharedCamParams" />

        <module class="ComparativeSurfacePotentialRenderer" name="potrenMaster" />  
        <module class="SurfacePotentialRendererSlave" name="potrenSlave0" />                                
        <module class="SurfacePotentialRendererSlave" name="potrenSlave1" />    
        
        <module class="VTILoader" name="vtidata0" />
        <module class="VTILoader" name="vtidata1" />
        <module class="PDBLoader" name="pdbdata0" />
        <module class="PDBLoader" name="pdbdata1" />

        <call class="CallRenderView" from="SplitView1::render1" to="SplitView2::render" />
        <call class="CallRenderView" from="SplitView1::render2" to="SplitView4::render" />
        <call class="CallRenderView" from="SplitView2::render1" to="SplitView3::render" />
        <call class="CallRenderView" from="SplitView2::render2" to="view1::render" />
        
        <call class="CallRenderView" from="SplitView4::render1" to="view2::render" />
        <call class="CallRenderView" from="SplitView4::render2" to="view3::render" />
        <call class="CallRender3D" from="view1::rendering" to="potrenMaster::rendering" />  
        <call class="CallRender3D" from="view2::rendering" to="potrenSlave0::rendering" />
        <call class="CallRender3D" from="view3::rendering" to="potrenSlave1::rendering" />  
        
        <call class="VTIDataCall" from="potrenMaster::getVolData0" to="vtidata0::dataOut" />
        <call class="VTIDataCall" from="potrenMaster::getVolData1" to="vtidata1::dataOut" />
        <call class="MolecularDataCall" from="potrenMaster::getParticleData0" to="pdbdata0::dataOut" />
        <call class="MolecularDataCall" from="potrenMaster::getParticleData1" to="pdbdata1::dataOut" />
        <call class="CallCamParams" from="view1::shareCamParams" to="sharedCamParams::camParams" />
        
        <call class="CallCamParams" from="view2::shareCamParams" to="sharedCamParams::camParams" />
        <call class="VBODataCall" from="potrenSlave0::vboIn" to="potrenMaster::vboOut0" />
        
        <call class="CallCamParams" from="view3::shareCamParams" to="sharedCamParams::camParams" />
        <call class="VBODataCall" from="potrenSlave1::vboIn" to="potrenMaster::vboOut1" />

        <!-- This is optional -->
        <module class="MoleculeCartoonRenderer" name="molren" />
        <module class="PDBLoader" name="pdbdata3" />
        <call class="CallRender3D" from="potrenMaster::protren" to="molren::rendering" />     
        <call class="MolecularDataCall" from="molren::getData" to="pdbdata3::dataOut" />
        <!-- This is optional -->   
        
        
        <module class="View2d" name="view2d1" />
        <module class="VariantMatchRenderer" name="ren" />
        <module class="ProteinVariantMatch" name="match" >
            <param name="heuristic" value="RMS" />
            <param name="rmsMode" value="All" />
        </module>

        <call class="CallRender2D" from="view2d1::rendering" to="ren::rendering" />
        <call class="VariantMatchDataCall" from="ren::getData" to="match::matrixDataout" /> 
        <call class="MolecularDataCall" from="match::getParticledata" to="pdbdata0::dataout" />
        <call class="VTIDataCall" from="match::getVolumeData" to="vtidata0::dataOut" />            
        
        <call class="CallRenderView" from="SplitView3::render1" to="view2d1::render" />
    </view>
    
    <!-- potcartview -->
    <view name="potcartview" viewmod="view3d">
        <module class="View3d" name="view3d" />
        <module class="ComparativeSurfacePotentialRenderer" name="potren" />
        <module class="MoleculeCartoonRenderer" name="cartren" />
        <module class="VTILoader" name="vtidata0" />
        <module class="VTILoader" name="vtidata1" />
        <module class="PDBLoader" name="pdbdata0" />
        <module class="PDBLoader" name="pdbdata1" />
        <call class="CallRender3D" from="view3d::rendering" to="potren::rendering" />
        <call class="CallRender3D" from="potren::protren" to="cartren::rendering" />        
        <call class="MolecularDataCall" from="cartren::getdata" to="pdbdata0::dataout" />
        <call class="VTIDataCall" from="potren::getVolData0" to="vtidata0::dataOut" />
        <call class="VTIDataCall" from="potren::getVolData1" to="vtidata1::dataOut" />
        <call class="MolecularDataCall" from="potren::getParticleData0" to="pdbdata0::dataOut" />
        <call class="MolecularDataCall" from="potren::getParticleData1" to="pdbdata1::dataOut" />
    </view>
    
    <!-- potmolview -->
    <view name="potmolview" viewmod="view3d">
        <module class="View3d" name="view3d" />
        <module class="ComparativeSurfacePotentialRenderer" name="potren" />
        <module class="SimpleMoleculeRenderer" name="molren" />
        <module class="VTILoader" name="vtidata0" />
        <module class="VTILoader" name="vtidata1" />
        <module class="PDBLoader" name="pdbdata0" />
        <module class="PDBLoader" name="pdbdata1" />
        <call class="CallRender3D" from="view3d::rendering" to="potren::rendering" />
        <call class="CallRender3D" from="potren::protren" to="molren::rendering" />        
        <call class="MolecularDataCall" from="molren::getdata" to="pdbdata0::dataout" />
        <call class="VTIDataCall" from="potren::getVolData0" to="vtidata0::dataOut" />
        <call class="VTIDataCall" from="potren::getVolData1" to="vtidata1::dataOut" />
        <call class="MolecularDataCall" from="potren::getParticleData0" to="pdbdata0::dataOut" />
        <call class="MolecularDataCall" from="potren::getParticleData1" to="pdbdata1::dataOut" />
    </view>

    <!-- netcdf2pdb -->
<!--    <job name="netcdf2pdb" jobmod="jb">
        <module class="PDBWriter" name="jb" >
            <param name="writePQR" value="OFF" />    
            <param name="writeSolventAtoms" value="ON" />
            <param name="writeSepFiles" value="ON" />
            <param name="minFrame" value="0" />
            <param name="nFrames" value="10" />
            <param name="stride" value="5" />
            <param name="filenamePrefix" value="C-1001-lt-rmsfit" />
            <param name="outputFolder" value="es/c-1001/time-series" />
        </module>
        <module class="NetCDFData" name="data" >
            <param name="filename" value="C-1001-lt-rmsfit.bintrj" />   
            <param name="cacheSize" value="25" />
        </module>
        <call class="CallProteinData" from="jb::getdata" to="data::provideGeneralData" />
    </job>-->
    
    <!-- pdb2smoothpdb -->
    <job name="pdb2smoothpdb" jobmod="jb">
        <module class="PDBWriter" name="jb" >
            <param name="writePQR" value="OFF" />    
            <param name="includeSolventAtoms" value="ON" />
            <param name="writeSepFiles" value="OFF" />
            <param name="minFrame" value="0" />
            <param name="nFrames" value="92" />
            <param name="stride" value="1" />
            <param name="filenamePrefix" value="99_md_final_nosolv_100fr_smoothed_5avg" />
            <param name="outputFolder" value="/proj/SFB716/D4/Datensaetze/scharnkn/TIM/20130411_2YPI/" />
        </module>
        <module class="PDBLoader" name="data" >
            <param name="pdbFilename" value="/proj/SFB716/D4/Datensaetze/scharnkn/TIM/20130411_2YPI/99_md_final_nosolv_100fr.pdb" /> 
            <param name="xtcFilename" value="" /> 
            <param name="maxFrames" value="100" /> 
        </module>
        <module class="TrajectorySmoothFilter" name="filter" >
            <param name="nAvgFrames" value="5" />   
        </module>
        <call class="MolecularDataCall" from="jb::getdata" to="filter::dataOut" />
        <call class="MolecularDataCall" from="filter::getdata" to="data::dataOut" />
    </job>
    
    <!-- pdb2pdb -->
    <job name="pdb2pdb" jobmod="jb">
        <module class="PDBWriter" name="jb" >
            <param name="writePQR" value="OFF" />    
            <param name="includeSolventAtoms" value="ON" />
            <param name="writeSepFiles" value="OFF" />
            <param name="minFrame" value="0" />
            <param name="nFrames" value="1" />
            <param name="stride" value="1" />
            <param name="filenamePrefix" value="99_md_final_nosolv_100fr_copy_win" />
            <param name="outputFolder" value="S:\SFB716_2\D4\Datensaetze\scharnkn\TIM\20130411_2YPI\" />
        </module>
        <module class="PDBLoader" name="data" >
            <param name="pdbFilename" value="S:\SFB716_2\D4\Datensaetze\scharnkn\TIM\20130411_2YPI\99_md_final_nosolv_100fr.pdb" /> 
            <param name="xtcFilename" value="" /> 
            <param name="maxFrames" value="100" /> 
        </module>
        <call class="MolecularDataCall" from="jb::getdata" to="data::dataOut" />
    </job>
    
    <!-- netcdf2pqr -->
<!--    <job name="netcdf2pqr" jobmod="jb">
        <module class="PDBWriter" name="jb" >
            <param name="writePQR" value="ON" />    
            <param name="writeSolventAtoms" value="ON" />
            <param name="writeSepFiles" value="ON" />
            <param name="minFrame" value="0" />
            <param name="nFrames" value="10" />
            <param name="stride" value="5" />
            <param name="filenamePrefix" value="C-1001-lt-rmsfit" />
            <param name="outputFolder" value="es/c-1001/time-series" />
        </module>
        <module class="NetCDFData" name="data" >
            <param name="filename" value="C-1001-lt-rmsfit.bintrj" />   
            <param name="cacheSize" value="25" />
        </module>
        <call class="CallProteinData" from="jb::getdata" to="data::provideGeneralData" />
    </job>-->
    
    <!-- calcpot -->
    <job name="calcpot" jobmod="dataWriter">
        <module class="PDBLoader" name="dataLoader" >
            <!--<param name="pdbFilename" value="es/c-1001/time-series/C-1001-lt-rmsfit.00000.pqr" />-->
            <param name="pdbFilename" value="es/CALB_2013-03-15/060_input.pqr" />
            <param name="strideFlag" value="OFF" />
            <param name="usePadding" value="OFF" />
        </module>   
        <module class="PotentialCalculator" name="calcjob" >
            <!--<param name="computationalMethod" value="DCS (no periodic boundaries)" />-->
            <!--<param name="computationalMethod" value="DCS" />-->
            <param name="computationalMethod" value="Ewald sum" />
            <param name="bboxType" value="Cubic" />
            <param name="chargesGridSpacing" value="4.0" />
            <param name="potentialGridSpacing" value="4.0" />
        </module>   
        <module class="VTIWriter" name="dataWriter" >
            <param name="minFrame" value="0" />
            <param name="nFrames" value="1" />
            <param name="stride" value="1" />
            <param name="filenamePrefix" value="060_input_ewald" />
            <param name="outputFolder" value="es/CALB_2013-03-15/" />
            <!--<param name="outputFolder" value="es/20130315_input_tprs/" />-->
            <param name="dataFormat" value="Binary" />
        </module>
        <call class="MolecularDataCall" from="calcjob::getdata" to="dataLoader::dataout" />
        <call class="VTIDataCall" from="dataWriter::getdata" to="calcjob::dataout" />
    </job>
    
    <!-- mappingplotjob -->
    <job name="mappingplotjob" jobmod="j">
        
        <module class="SurfaceMappingTest" name="j" />   
        <module class="VTILoader" name="vtidata" >
            <param name="vtiPath" value="es/CALB_2013-03-15/variants_bin/CALB_variants_nosolv_bin.00.vti" />
            <!--<param name="vtiPath" value="es/CALB_2013-03-15/variants_bin/CALB_variants_nosolv_bin.00.vti" />-->
        </module>  
        <module class="PDBLoader" name="pdbdata" >
            <param name="pdbFilename" value="es/CALB_2013-03-15/variants_bin/CALB_variants_nosolv.pdb" />
            <!--<param name="pdbFilename" value="es/TIM/20130430_visus_trj/20130411_2YPI/99_md_final_nosolv.pdb" />-->
        </module>  
          
        <call class="VTIDataCall" from="j::getVolumeData" to="vtidata::dataOut" />
        <call class="MolecularDataCall" from="j::getParticleData" to="pdbdata::dataOut" />
    
    </job>
    
    <!-- dx2vti -->
    <job name="dx2vti" jobmod="dataWriter">
        <module class="VMDDXLoader" name="dataLoader" >
            <param name="filename" value="/proj/SFB716/D4/Datensaetze/scharnkn/TIM/20130411_2YPI/noavg_ewald025/TIM_2YPI.0000.dx" />
        </module>     
        <module class="VTIWriter" name="dataWriter" >
            <param name="minFrame" value="0" />
            <param name="nFrames" value="1" />
            <param name="stride" value="1" />
            <param name="filenamePrefix" value="TIM_2YPI_TEST_BIN" />
            <param name="outputFolder" value="/proj/SFB716/D4/Datensaetze/scharnkn/TIM/20130411_2YPI/noavg_ewald025/" />
            <param name="dataFormat" value="Binary" />
        </module>
        <call class="VTIDataCall" from="dataWriter::getdata" to="dataLoader::dataout" />
    </job>
    
    <!-- vti2vti -->
    <job name="vti2vti" jobmod="dataWriter">
        <module class="VTILoader" name="vtidata" >
            <param name="vtiPath" value="/proj/SFB716/D4/Datensaetze/scharnkn/CALB_2013-03-15/variants/CALB_all_variants_nosolv.00.vti" />
        </module>     
        <module class="VTIWriter" name="dataWriter" >
            <param name="minFrame" value="0" />
            <param name="nFrames" value="1" />
            <param name="stride" value="1" />
            <param name="filenamePrefix" value="CALB_TEST_BIN" />
            <param name="outputFolder" value="/home/scharnkn" />
            <param name="dataFormat" value="Binary" />
        </module>
        <call class="VTIDataCall" from="dataWriter::getdata" to="vtidata::dataout" />
    </job>

</MegaMol>
