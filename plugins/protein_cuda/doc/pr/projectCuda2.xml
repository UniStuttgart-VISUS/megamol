<?xml version="1.0" encoding="utf-8"?>
<MegaMol type="project" version="1.0">

    <!-- Views for Frodock -->
    <view name="frodockview" viewmod="view">
        <module class="View3D" name="view" />
        <module class="Mux2Renderer3D" name="switch" />
        <call class="CallRender3D" from="view::rendering" to="switch::rendering" />
        <module class="SimpleMoleculeRenderer" name="ligRen" />
        <module class="SimpleMoleculeRenderer" name="recRen" />
        <call class="CallRender3D" from="switch::renderer1" to="recRen::rendering" />
        <call class="CallRender3D" from="switch::renderer2" to="ligRen::rendering" />
        <module class="FrodockLoader" name="fdata" />
        <module class="PDBLoader" name="rdata" />
        <module class="PDBLoader" name="ldata" />
        <call class="MolecularDataCall" from="fdata::receptordata" to="rdata::dataout" />
        <call class="MolecularDataCall" from="fdata::liganddata" to="ldata::dataout" />
        <call class="MolecularDataCall" from="ligRen::getdata" to="fdata::dataout" />
        <call class="MolecularDataCall" from="recRen::getdata" to="rdata::dataout" />
    </view>

    <!-- Views for PDB files using new PDB loader -->
    <view name="cartoontest" viewmod="view">
        <module class="View3d" name="view" />
        <module class="BezierMeshRenderer" name="ren" />
        <call class="CallRender3D" from="view::rendering" to="ren::rendering" />
        <module class="CartoonDataSource" name="cartdata" />
        <module class="PDBLoader" name="pdbdata" />
        <call class="MolecularDataCall" from="cartdata::moldata" to="pdbdata::dataout" />
        <call class="BezierDataCall" from="ren::getdata" to="cartdata::dataout" />
    </view>

    <view name="cartoontest2" viewmod="view">
        <module class="View3d" name="view" />
        <module class="ExtBezierMeshRenderer" name="ren" />
        <call class="CallRender3D" from="view::rendering" to="ren::rendering" />
        <module class="CartoonDataSource" name="cartdata" />
        <module class="PDBLoader" name="pdbdata" />
        <call class="MolecularDataCall" from="cartdata::moldata" to="pdbdata::dataout" />
        <call class="ExtBezierDataCall" from="ren::getdata" to="cartdata::dataout" />
    </view>

    <view name="cartoontest3" viewmod="view">
        <module class="View3d" name="view" />
        <module class="Mux2Renderer3D" name="switch" />
        <call class="CallRender3D" from="view::rendering" to="switch::rendering" />
        <module class="ExtBezierMeshRenderer" name="ren" />
        <module class="MoleculeCartoonRenderer" name="cren" />
        <call class="CallRender3D" from="switch::renderer1" to="ren::rendering" />
        <call class="CallRender3D" from="switch::renderer2" to="cren::rendering" />
        <module class="CartoonDataSource" name="cartdata" />
        <module class="PDBLoader" name="pdbdata" />
        <call class="MolecularDataCall" from="cartdata::moldata" to="pdbdata::dataout" />
        <call class="MolecularDataCall" from="cren::getdata" to="pdbdata::dataout" />
        <call class="ExtBezierDataCall" from="ren::getdata" to="cartdata::dataout" />
    </view>

    <view name="cartoontest4" viewmod="view">
        <module class="View3d" name="view" />
        <module class="Mux2Renderer3D" name="switch" />
        <call class="CallRender3D" from="view::rendering" to="switch::rendering" />
        <module class="ExtBezierMeshRenderer" name="ren" />
        <module class="SimpleMoleculeRenderer" name="cren" />
        <call class="CallRender3D" from="switch::renderer1" to="ren::rendering" />
        <call class="CallRender3D" from="switch::renderer2" to="cren::rendering" />
        <module class="CartoonDataSource" name="cartdata" />
        <module class="PDBLoader" name="pdbdata" />
        <call class="MolecularDataCall" from="cartdata::moldata" to="pdbdata::dataout" />
        <call class="MolecularDataCall" from="cren::getdata" to="pdbdata::dataout" />
        <call class="ExtBezierDataCall" from="ren::getdata" to="cartdata::dataout" />
    </view>

    <view name="molcudases" viewmod="view3d">
        <module class="View3d" name="view3d" />
        <module class="MoleculeCudaSESRenderer" name="protren" />
        <call class="CallRender3D" from="view3d::rendering" to="protren::rendering" />
        <module class="PDBLoader" name="pdbdata" />
        <call class="MolecularDataCall" from="protren::getdata" to="pdbdata::dataout" />
    </view>

    <view name="pdbmolviewdual" viewmod="view">
        <module class="View3D" name="view" />
        <module class="Mux2Renderer3D" name="switch" />
        <call class="CallRender3D" from="view::rendering" to="switch::rendering" />
        <module class="SimpleMoleculeRenderer" name="ligRen" />
        <module class="SimpleMoleculeRenderer" name="recRen" />
        <call class="CallRender3D" from="switch::renderer1" to="ligRen::rendering" />
        <call class="CallRender3D" from="switch::renderer2" to="recRen::rendering" />
        <module class="PDBLoader" name="rdata" />
        <module class="PDBLoader" name="ldata" />
        <call class="MolecularDataCall" from="ligRen::getdata" to="ldata::dataout" />
        <call class="MolecularDataCall" from="recRen::getdata" to="rdata::dataout" />
    </view>

    <view name="pdbview" viewmod="view3d">
        <module class="View3d" name="view3d" />
        <module class="ProteinRenderer" name="protren" />
        <call class="CallRender3D" from="view3d::rendering" to="protren::rendering" />
        <module class="PDBLoader" name="pdbdata" />
        <call class="CallProteinData" from="protren::getdata" to="pdbdata::dataout" />
    </view>

    <view name="pdbmolview" viewmod="view3d">
        <module class="View3d" name="view3d" />
        <module class="SimpleMoleculeRenderer" name="molren" />
        <call class="CallRender3D" from="view3d::rendering" to="molren::rendering" />
        <module class="PDBLoader" name="pdbdata" />
        <call class="MolecularDataCall" from="molren::getdata" to="pdbdata::dataout" />
    </view>

    <view name="pdbsesview" viewmod="view3d">
        <module class="View3d" name="view3d" />
        <module class="MoleculeSESRenderer" name="sesren" />
        <call class="CallRender3D" from="view3d::rendering" to="sesren::rendering" />
        <module class="PDBLoader" name="pdbdata" />
        <call class="MolecularDataCall" from="sesren::getdata" to="pdbdata::dataout" />
    </view>

	<view name="pdbcartoonview" viewmod="view3d">
		<module class="View3d" name="view3d" />
		<module class="MoleculeCartoonRenderer" name="cartoonren" />
		<call class="CallRender3D" from="view3d::rendering" to="cartoonren::rendering" />
		<module class="PDBLoader" name="pdbdata" />
		<call class="MolecularDataCall" from="cartoonren::getdata" to="pdbdata::dataout" />
	</view>

	<view name="pdbcartmolview" viewmod="view3d">
		<module class="View3d" name="view3d" />
		<module class="MoleculeCartoonRenderer" name="cartoonren" />
        <module class="SimpleMoleculeRenderer" name="molren" />
		<call class="CallRender3D" from="view3d::rendering" to="cartoonren::rendering" />
        <call class="CallRender3D" from="cartoonren::renderMolecule" to="molren::rendering" />
		<module class="PDBLoader" name="pdbdata" />
		<call class="MolecularDataCall" from="cartoonren::getdata" to="pdbdata::dataout" />
        <call class="MolecularDataCall" from="molren::getdata" to="pdbdata::dataout" />
	</view>
    
    <view name="pdbmolvolview" viewmod="view3d">
        <module class="View3d" name="view3d" />
        <module class="ProteinVolumeRenderer" name="volren" />
        <module class="SimpleMoleculeRenderer" name="molren" />
        <call class="CallRender3D" from="view3d::rendering" to="volren::rendering" />
        <call class="CallRender3D" from="volren::renderProtein" to="molren::rendering" />
        <module class="PDBLoader" name="pdbdata" />
        <call class="MolecularDataCall" from="volren::getdata" to="pdbdata::dataout" />
        <call class="MolecularDataCall" from="molren::getdata" to="pdbdata::dataout" />
    </view>
    
    <!-- Views for PDB files -->
    <view name="proteinviewdual" viewmod="view">
        <module class="View3D" name="view" />
        <module class="Mux2Renderer3D" name="switch" />
        <call class="CallRender3D" from="view::rendering" to="switch::rendering" />
        <module class="ProteinRenderer" name="pr1" />
        <module class="ProteinRenderer" name="pr2" />
        <call class="CallRender3D" from="switch::renderer1" to="pr1::rendering" />
        <call class="CallRender3D" from="switch::renderer2" to="pr2::rendering" />
        <module class="ProteinData" name="pd1" />
        <module class="ProteinData" name="pd2" />
        <call class="CallProteinData" from="pr1::getdata" to="pd1::providedata" />
        <call class="CallProteinData" from="pr2::getdata" to="pd2::providedata" />
    </view>

    <view name="proteinview" viewmod="view3d">
        <module class="View3d" name="view3d" />
        <module class="ProteinRenderer" name="protren" />
        <call class="CallRender3D" from="view3d::rendering" to="protren::rendering" />
        <module class="ProteinData" name="protdata" />
        <call class="CallProteinData" from="protren::getdata" to="protdata::providedata" />
    </view>

	<view name="proteinviewcartoon" viewmod="view3d">
		<module class="View3d" name="view3d" />
		<module class="ProteinRendererCartoon" name="protrencartoon" />
		<call class="CallRender3D" from="view3d::rendering" to="protrencartoon::rendering" />
		<module class="ProteinData" name="protdata" />
		<call class="CallProteinData" from="protrencartoon::getdata" to="protdata::providedata" />
	</view>

	<view name="proteinviewses" viewmod="view3d">
		<module class="View3d" name="view3d" />
		<module class="ProteinRendererSES" name="protrenses" />
		<call class="CallRender3D" from="view3d::rendering" to="protrenses::rendering" />
		<module class="ProteinData" name="protdata" />
		<call class="CallProteinData" from="protrenses::getdata" to="protdata::providedata" />
	</view>
    
    <!--
	<view name="proteinviewvol" viewmod="view3d">
		<module class="View3d" name="view3d" />
		<module class="ProteinVolumeRenderer" name="protvolren" />
		<call class="CallRender3D" from="view3d::rendering" to="protvolren::rendering" />
		<module class="ProteinData" name="protdata" />
		<call class="CallProteinData" from="protvolren::getdata" to="protdata::providedata" />
	</view>
    -->

	<view name="proteinmovementview" viewmod="view3d">
		<module class="View3d" name="view3d" />
		<module class="ProteinMovementRenderer" name="protmoveren" />
		<call class="CallRender3D" from="view3d::rendering" to="protmoveren::rendering" />
		<module class="ProteinMovementData" name="protdata" />
		<call class="CallProteinMovementData" from="protmoveren::getdata" to="protdata::providedata" />
	</view>

	<view name="proteinviewbdp" viewmod="view3d">
		<module class="View3d" name="view3d" />
		<module class="ProteinRendererBDP" name="protrenbdp" />
		<call class="CallRender3D" from="view3d::rendering" to="protrenbdp::rendering" />
		<module class="ProteinData" name="protdata" />
		<call class="CallProteinData" from="protrenbdp::getdata" to="protdata::providedata" />
	</view>
    
    <view name="proteinviewcbcuda" viewmod="view3d">
        <module class="View3d" name="view3d" />
        <module class="ProteinRendererCBCUDA" name="protrencbcuda" />
        <call class="CallRender3D" from="view3d::rendering" to="protrencbcuda::rendering" />
        <module class="ProteinData" name="protdata" />
        <call class="CallProteinData" from="protrencbcuda::getdata" to="protdata::providedata" />
    </view>
    
    <!--
    <view name="proteinviewcbocl" viewmod="view3d">
        <module class="View3d" name="view3d" />
        <module class="ProteinRendererCBOpenCL" name="protren" />
        <call class="CallRender3D" from="view3d::rendering" to="protren::rendering" />
        <module class="ProteinData" name="protdata" />
        <call class="CallProteinData" from="protren::getdata" to="protdata::providedata" />
    </view>
    -->
    
	<view name="proteinviewsesgpu" viewmod="view3d">
	  	<module class="View3d" name="view3d" />
	  	<module class="ProteinRendererSESGPU" name="protrensesgpu" />
		<call class="CallRender3D" from="view3d::rendering" to="protrensesgpu::rendering" />
		<module class="ProteinData" name="protdata" />
		<call class="CallProteinData" from="protrensesgpu::getdata" to="protdata::providedata" />
	</view>

	<view name="proteinviewsesgpucuda" viewmod="view3d">
	  	<module class="View3d" name="view3d" />
	  	<module class="ProteinRendererSESGPUCuda" name="protrensesgpucuda" />
		<call class="CallRender3D" from="view3d::rendering" to="protrensesgpucuda::rendering" />
		<module class="ProteinData" name="protdata" />
		<call class="CallProteinData" from="protrensesgpucuda::getdata" to="protdata::providedata" />
	</view>

    <view name="proteinviewccp4" viewmod="view3d">
        <module class="View3d" name="view3d" />
        <module class="ProteinVolumeRenderer" name="protrenvol" />
        <module class="ProteinRenderer" name="protren" />
        <call class="CallRender3D" from="view3d::rendering" to="protrenvol::rendering" />
        <call class="CallRender3D" from="protrenvol::renderProtein" to="protren::rendering" />
        <module class="CCP4VolumeData" name="voldata" />
        <module class="ProteinData" name="protdata" />
        <call class="CallVolumeData" from="protrenvol::getdata" to="voldata::providedata" />
        <call class="CallProteinData" from="protren::getdata" to="protdata::providedata" />
    </view>
    
	<view name="volumeview" viewmod="view3d">
        <module class="View3d" name="view3d" />
        <module class="ProteinVolumeRenderer" name="protvolren" />
        <call class="CallRender3D" from="view3d::rendering" to="protvolren::rendering" />
        <module class="ProteinData" name="protdata" />
        <call class="CallProteinData" from="protvolren::getdata" to="protdata::providedata" />
	</view>
    
	<view name="proteinviewvol" viewmod="view3d">
        <module class="View3d" name="view3d" />
        <module class="ProteinVolumeRenderer" name="protvolren" />
        <module class="ProteinRenderer" name="protren" />
        <call class="CallRender3D" from="view3d::rendering" to="protvolren::rendering" />
        <call class="CallRender3D" from="protvolren::renderProtein" to="protren::rendering" />
        <module class="ProteinData" name="protdata" />
        <call class="CallProteinData" from="protvolren::getdata" to="protdata::providedata" />
        <call class="CallProteinData" from="protren::getdata" to="protdata::providedata" />
	</view>
    
	<view name="proteinviewvolcartoon" viewmod="view3d">
		<module class="View3d" name="view3d" />
		<module class="ProteinVolumeRenderer" name="protvolren" />
        <module class="ProteinRendererCartoon" name="protrencartoon" />
		<call class="CallRender3D" from="view3d::rendering" to="protvolren::rendering" />
        <call class="CallRender3D" from="protvolren::renderProtein" to="protrencartoon::rendering" />
		<module class="ProteinData" name="protdata" />
		<call class="CallProteinData" from="protvolren::getdata" to="protdata::providedata" />
        <call class="CallProteinData" from="protrencartoon::getdata" to="protdata::providedata" />
	</view>
    
	<view name="proteinviewstickses" viewmod="view3d">
        <module class="View3d" name="view3d" />
        <module class="ProteinRenderer" name="protren" />
        <module class="ProteinRendererSES" name="protrenses" />
        <call class="CallRender3D" from="view3d::rendering" to="protren::rendering" />
        <call class="CallRender3D" from="protren::renderSolvent" to="protrenses::rendering" />
        <module class="ProteinData" name="protdata" />
        <module class="ProteinData" name="protdata2" />
        <call class="CallProteinData" from="protren::getdata" to="protdata::providedata" />
        <call class="CallProteinData" from="protrenses::getdata" to="protdata2::providedata" />
	</view>
    
    <!-- Views for NetCDF files -->
	<view name="netcdfview" viewmod="view3d">
		<module class="View3d" name="view3d" />
		<module class="ProteinRenderer" name="protren" />
		<call class="CallRender3D" from="view3d::rendering" to="protren::rendering" />
		<module class="NetCDFData" name="netcdfdata" />
		<call class="CallProteinData" from="protren::getdata" to="netcdfdata::provideGeneralData" />
	</view>

	<view name="netcdfsolventview" viewmod="view3d">
		<module class="View3d" name="view3d" />
		<module class="SolventRenderer" name="solren" />
		<call class="CallRender3D" from="view3d::rendering" to="solren::rendering" />
		<module class="NetCDFData" name="netcdfdata" />
		<call class="CallProteinData" from="solren::getdata" to="netcdfdata::provideGeneralData" />
	</view>

	<view name="netcdfprotsolview" viewmod="view3d">
		<module class="View3d" name="view3d" />
		<module class="ProteinRenderer" name="protren" />
		<module class="SolventRenderer" name="solren" />
		<call class="CallRender3D" from="view3d::rendering" to="protren::rendering" />
        <call class="CallRender3D" from="protren::renderSolvent" to="solren::rendering" />
		<module class="NetCDFData" name="netcdfdata" />
		<call class="CallProteinData" from="protren::getdata" to="netcdfdata::provideGeneralData" />
		<call class="CallProteinData" from="solren::getdata" to="netcdfdata::provideGeneralData" />
	</view>

	<view name="netcdfcartoonsolview" viewmod="view3d">
		<module class="View3d" name="view3d" />
		<module class="ProteinRendererCartoon" name="protren" />
		<module class="SolventRenderer" name="solren" />
		<call class="CallRender3D" from="view3d::rendering" to="protren::rendering" />
        <call class="CallRender3D" from="protren::renderSolvent" to="solren::rendering" />
		<module class="NetCDFData" name="netcdfdata" />
		<call class="CallProteinData" from="protren::getdata" to="netcdfdata::provideGeneralData" />
		<call class="CallProteinData" from="solren::getdata" to="netcdfdata::provideGeneralData" />
	</view>

	<view name="netcdfviewcartoon" viewmod="view3d">
		<module class="View3d" name="view3d" />
		<module class="ProteinRendererCartoon" name="protrencartoon" />
		<call class="CallRender3D" from="view3d::rendering" to="protrencartoon::rendering" />
		<module class="NetCDFData" name="netcdfdata" />
		<call class="CallProteinData" from="protrencartoon::getdata" to="netcdfdata::provideGeneralData" />
	</view>

	<view name="netcdfviewses" viewmod="view3d">
		<module class="View3d" name="view3d" />
		<module class="ProteinRendererSES" name="protrenses" />
		<call class="CallRender3D" from="view3d::rendering" to="protrenses::rendering" />
		<module class="NetCDFData" name="netcdfdata" />
		<call class="CallProteinData" from="protrenses::getdata" to="netcdfdata::provideGeneralData" />
	</view>

	<view name="netcdfviewvol" viewmod="view3d">
		<module class="View3d" name="view3d" />
		<module class="ProteinVolumeRenderer" name="protvolren" />
        <module class="ProteinRenderer" name="protren" />
		<call class="CallRender3D" from="view3d::rendering" to="protvolren::rendering" />
        <call class="CallRender3D" from="protvolren::renderProtein" to="protren::rendering" />
		<module class="NetCDFData" name="netcdfdata" />
		<call class="CallProteinData" from="protvolren::getdata" to="netcdfdata::provideGeneralData" />
        <call class="CallProteinData" from="protren::getdata" to="netcdfdata::provideGeneralData" />
	</view>

	<view name="netcdfviewvolcartoon" viewmod="view3d">
		<module class="View3d" name="view3d" />
		<module class="ProteinVolumeRenderer" name="protvolren" />
        <module class="ProteinRendererCartoon" name="protrencartoon" />
		<call class="CallRender3D" from="view3d::rendering" to="protvolren::rendering" />
        <call class="CallRender3D" from="protvolren::renderProtein" to="protrencartoon::rendering" />
		<module class="NetCDFData" name="netcdfdata" />
		<call class="CallProteinData" from="protvolren::getdata" to="netcdfdata::provideGeneralData" />
        <call class="CallProteinData" from="protrencartoon::getdata" to="netcdfdata::provideGeneralData" />
	</view>

    <!-- Views for coarse grain data files -->
    <view name="cgsphereview" viewmod="view3d">
        <module class="View3d" name="view3d" />
        <module class="SphereRenderer" name="sphereren" />
        <call class="CallRender3D" from="view3d::rendering" to="sphereren::rendering" />
        <module class="CoarseGrainDataLoader" name="cgdata" />
        <call class="SphereDataCall" from="sphereren::getdata" to="cgdata::dataout" />
    </view>

</MegaMol>
