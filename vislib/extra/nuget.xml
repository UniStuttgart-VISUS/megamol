<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0" DefaultTargets="Pack">

    <PropertyGroup>
        <!--
        <appname>HelloWorldCS</appname>
        -->
        <Today>$([System.DateTime]::Now.ToString("yyyyMMdd"))</Today>
    </PropertyGroup>

    <!-- Configurations that are being built and included in the nuget package. -->
    <ItemGroup>
        <Artefact Include="vislib.sln">
            <Properties>Configuration=Debug;Platform=Win64</Properties>
        </Artefact>
        <Artefact Include="vislib.sln">
            <Properties>Configuration=Release;Platform=Win64</Properties>
        </Artefact>
        <Artefact Include="vislib.sln">
            <Properties>Configuration=Debug;Platform=Win32</Properties>
        </Artefact>
        <Artefact Include="vislib.sln">
            <Properties>Configuration=Release;Platform=Win32</Properties>
        </Artefact>
    </ItemGroup>

    <!-- Task for collecting the include directories that go into the nuget package. -->
    <UsingTask TaskName="CollectIncludes" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
        <ParameterGroup>
            <IncludeDirectories ParameterType="System.String[]" Output="true" />
        </ParameterGroup>
        <Task>
            <Using Namespace="System"/>
            <Using Namespace="System.IO"/>
            <Using Namespace="System.Linq"/>
            <Using Namespace="System.Collections.Generic"/>
            <Code Type="Fragment" Language="cs">
                <![CDATA[
var retval = new List<string>();

foreach (var d in Directory.GetDirectories(".")) {
    var inc = d + @"\include";
    if (Directory.Exists(inc)) {
        retval.Add(inc);
    }
}

IncludeDirectories = retval.ToArray();
]]>
            </Code>
        </Task>
    </UsingTask>

    <!-- Build the configurations specified above. -->
    <Target Name="Build">
        <MSBuild Projects="@(Artefact)" />
    </Target>

    <!-- Creates a file nuget.version containing the version of the nuget package. -->
    <Target Name="Version" Outputs="nuget.version">
        <!-- Write revision version 0 into file. -->
        <WriteLinesToFile File="nuget.version" Lines="0" Overwrite="true" Encoding="Unicode"/>
        <!-- Write revision from SVN into file. -->
        <Exec Command="powershell -Command &quot;svn info | ?{ $_ -match 'Revision[^\d]+(?&lt;r&gt;\d+)' } | foreach { $matches['r'] > nuget.version }&quot;" ContinueOnError="true" />
        <!-- Retrieve revision from file. -->
        <ReadLinesFromFile File="nuget.version">
            <Output TaskParameter="Lines" ItemName="Revision"/>
        </ReadLinesFromFile>
        <!-- Write version string including revision number into file. -->
        <WriteLinesToFile File="nuget.version" Lines="#define { package-version: &quot;1.0.0.%(Revision.Identity)&quot;%3b }" Overwrite="true" Encoding="Unicode"/>
    </Target>

    <!-- Pack the artefacts from the compilation into a nuget package. -->
    <Target Name="Pack" DependsOnTargets="Build; Version">
        <Exec Command="powershell -Command Write-NuGetPackage .\vislib.autopkg" />
    </Target>

    <!-- Target for testing crazy ideas... -->
    <Target Name="Test">
        <Exec Command="svn info"/>
        <Exec Command="powershell -Command &quot;svn info | ?{ $_ -match 'Revision[^\d]+(?&lt;r&gt;\d+)' } | foreach { $matches['r'] > nuget.version }&quot;" />
        <ReadLinesFromFile File="nuget.version">
            <Output TaskParameter="Lines" ItemName="Revision"/>
        </ReadLinesFromFile>
        <Message Text="@(Revision)" />
        <WriteLinesToFile File="nuget.version" Lines="#define { package-version: &quot;1.0.0.%(Revision.Identity)&quot;%3b }" Overwrite="true" Encoding="Unicode"/>
        <Message Text="$(MSBuildToolsVersion)" />
        <Message Text="$(MSBuildThisFileDirectory)" />
        <CollectIncludes>
            <Output PropertyName="Includes" TaskParameter="IncludeDirectories" />
        </CollectIncludes>
        <Message Text="$(Includes)" />
    </Target>
    
</Project>
